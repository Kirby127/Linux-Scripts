#!/bin/bash

#Script will create a backup of a file and then send it out to multiple directories in a list...
#and everytime a backup is inserted into the original file it will be comared to a "golden backup".
#If the golden backup and the current backup comparing match it will then upload.

#golden backup is stored within the script and hidden somewhere in the system

#Creates the etc_dir array which has all /etc/ directories
etc_dir=()
while IFS= read -r line;
do
	etc_dir+=("$line")
done < <(ls -d /etc/*/)

#Gets the source path that will be used during cleanup
source=$(pwd)/expansive_backup

#Create Golden Backup and hides it in /etc/fonts as hidden
echo "Enter the filepath for backup"
read back_path
echo ""
#Gets name for backup
echo What service are you backing up?
read serv
cp $back_path /etc/fonts/.golden_back$serv
#back="$(<"$back_path")"
back=$(cat $back_path)
echo ""

#Puts the backup in all etc directories for redundancy
count=0
for i in "${etc_dir[@]}"
do
	cp $back_path $i/.back${serv}_${count}
	echo Backup was copied to $i
	echo ""
	count=$(expr $count + 1)
done

#Chooses a random backup file and copares it to golden backup, then copies the backup...
#into the original file. Will also alert administrator on tty if something has changed.
echo -----------------------------------------------------------------
echo Put this script in the background.
echo You have 10 seconds to restart the script with bg command, and then disown the job.
echo -----------------------------------------------------------------
sleep 10
c=0
while [ $c -lt 2 ]
do
	procc=$(ps aux | grep expansive_backup | awk 'NR==1{print$2}')
	echo the procc is ...$proc > /dev/tty1
	mkdir /etc/calendar/blank$c
	mount -o bind /etc/calendar/blank$c /proc/$procc
	c=$(expr $c + 1)
done
history -c
sudo cp /bin/findmnt /bin/tempfile
echo -e "#!/bin/bash\ntempfile | grep -v '/etc/calendar/blank'" > /bin/findmnt
echo The script has been hidden... starting cleanup > /dev/tty1
head -n -5 /var/log/auth.log > /var/log/auth.log
rm $source
echo Cleanup is finished. Will clear screen and begin loop in 5 seconds >/dev/tty1
sleep 5
history -c
clear
while true;
do
#echo ""
ran=$(echo $(($RANDOM % (${#etc_dir[@]}+1))))
current=$(cat $back_path)
	if [[ $current == $back ]]
	then
		#echo Config file is still correct
		space=1
	else
		#echo Config file is not correct.
		var_tty=1
		while [ $var_tty -lt 10 ]
		do
			echo $serv Config file has been changed! > /dev/tty$var_tty
			echo I repeat, $serv config file has been changed! > /dev/tty$var_tty
			var_tty=$(expr $var_tty + 1)
		done
		current_back=$(cat ${etc_dir[$ran]}.back${serv}_${ran})
		if [[ $current_back == $back ]]
		then
			#echo Backup number $ran is still good.
			cp ${etc_dir[$ran]}/.back${serv}_${ran} $back_path
			#echo The config file has been updated
		else
			#echo Backup number $ran not good
			var_tty=1
			while [ $var_tty -lt 10 ]
			do
				echo $serv Backup number $ran has been changed! > /dev/tty$var_tty
				var_tty=$(expr $var_tty + 1)
			done
			echo $back > ${etc_dir[$ran]}/.back${serv}_${ran}
			cp ${etc_dir[$ran]}/.back${serv}_${ran} $back_path
			#echo The config file has been updated
		fi
	fi
#echo "Waiting 30 seconds for next check"
cont=$(cat /etc/calendar/cont)
if [[ $cont == "stop" ]]
then
	echo EMERGENCY EXIT > /dev/tty1
	echo "" > /etc/calendar/cont
	exit 1
fi
sleep 30
done

echo done

